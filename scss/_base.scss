//VARS

//colors
$white: #fff;
//$light: #f4f4f4;
$grey-search: #e5e5e5;
$lighter: #666;
$dark: #333645;
$darker: #2d303e;
$btn-hov: #ebebeb;
$service-colors: //service card colors
  ('1': #67809f,
  '2': #4083d7,
  '3': #2dcc71,
  '4': #d64541,
  '5': #926fb1,
  '6': #f62559,
  '7': #926fb1);

// Layout
$max-width: 1000px;
$gutter: 10px;

//breakpoints
$breakpoints: (
  'xs': 575px,
  'sm': 576px,
  'med': 768px,
  'lg': 992px,
);


//font weights 700 600 400
@font-face{
  font-family:Poppins;
  font-style:italic;
  font-weight:400;
  font-display:swap;
  src:local("Poppins Italic"),local("Poppins-Italic"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiGyp8kv8JHgFVrJJLucHtF.ttf) 
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:italic;
  font-weight:600;
  font-display:swap;
  src:local("Poppins SemiBold Italic"),
  local("Poppins-SemiBoldItalic"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiDyp8kv8JHgFVrJJLmr19VF9eL.ttf) 
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:italic;
  font-weight:700;
  font-display:swap;
  src:local("Poppins Bold Italic"),
  local("Poppins-BoldItalic"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiDyp8kv8JHgFVrJJLmy15VF9eL.ttf) 
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:normal;
  font-weight:400;
  font-display:swap;
  src:local("Poppins Regular"), 
  local("Poppins-Regular"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiEyp8kv8JHgFVrJJfedw.ttf)
  format("truetype")
}
@font-face { 
  font-family:Poppins;
  font-style:normal;
  font-weight:600;
  font-display:swap;
  src:local("Poppins SemiBold"),
  local("Poppins-SemiBold"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiByp8kv8JHgFVrLEj6Z1xlEA.ttf)
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:normal;
  font-weight:700;
  font-display:swap;
  src:local("Poppins Bold"),
  local("Poppins-Bold"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiByp8kv8JHgFVrLCz7Z1xlEA.ttf)
  format("truetype")
}

html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
  
*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

body {
  font-size: 1rem;
  line-height: 1.5;
  margin: 0;

  font-family: Poppins, sans-serif;
  font-size: 1rem;
  letter-spacing: .4px;
  background-color: darken(#fff, 2%);
}

.clearfix::after {
  content: " ";
  clear: both;
  display: table;
}

h2 {
  text-transform: uppercase;
  font-weight: 500;
}
a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}

//media queries
@mixin mq($break) {
  $value: map-get($breakpoints, $break);
  $sm: map-get($breakpoints, 'sm');
    
  @if $value == null {
    @error "'#{$break}' is not a valid breakpoint name.";   
  }
            
  @if $value < $sm {
    @media only screen and (max-width: $value){
       @content;
    }
   }
  @else {
     @media only screen and (min-width: $value){
       @content;
    }
  }
} 

@mixin card-grid () {
    display: grid;
    grid-gap: 2em;
    margin: 5em 3%;
    grid-template-columns: 1fr; //sm screen layout

    @include mq(med) {
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); //use this with media queries for screensize later
        grid-auto-flow: row;
    }
    .card {
        display: inline-block;
        padding: 1.5em 1.2em;
        border: 1px solid rgb(204, 204, 204);
        border-radius: 0.25em;
        text-align: center; 
        color: $dark;
        background-color: $white;
    }
}

@for $i from 1 through 7 {
  .service-list {
    .card:nth-of-type(#{$i}) {
      //CARD default state
      .service-icon {
        color: $white;
        background-color: map-get($service-colors, #{$i});
      }
      .btn {
        background-color: map-get($service-colors, #{$i});
      }

      //CARD hover state
      &:hover {
        & {
          background-color: map-get($service-colors, #{$i});
        }
        .service-icon,
        .btn {
          color: map-get($service-colors, #{$i});
          background-color: $white;
        }
        h3,
        p {
          color: white;
        }
      }
    }
  }
        
}
