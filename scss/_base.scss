////================
////VARS
////===============
//colors
$white: #fff;
//$light: #f4f4f4;
$grey-search: #e5e5e5;
$lighter: #666;
$dark: #333645;
$darker: #2d303e;
$btn-hov: #ebebeb;
$service-colors: ( //service card colors
  '1': #67809f, //software
  '2': #4083d7, //it
  '3': #2dcc71, //digital
  '4': #d64541, //telecoms
  '5': #926fb1, //web
  '6': #f62559, //security
  '7': #926fb1);

$color-key:(
    'web': 5,
    'it': 2,
    'telecoms': 4,
    'software': 1,
    'digital': 3,
    'security': 6);

    
// Layout //not used yet
$max-width: 1000px;
$gutter: 10px;

//breakpoints
$breakpoints: (
  'xs': 575px,
  'sm': 600px,
  'med': 768px,
  'lg': 992px,
  'xlg': 1260px,
);

//===========
//FONTS
//===========
//font weights 700 600 400
@font-face{
  font-family:Poppins;
  font-style:italic;
  font-weight:400;
  font-display:swap;
  src:local("Poppins Italic"),local("Poppins-Italic"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiGyp8kv8JHgFVrJJLucHtF.ttf) 
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:italic;
  font-weight:600;
  font-display:swap;
  src:local("Poppins SemiBold Italic"),
  local("Poppins-SemiBoldItalic"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiDyp8kv8JHgFVrJJLmr19VF9eL.ttf) 
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:italic;
  font-weight:700;
  font-display:swap;
  src:local("Poppins Bold Italic"),
  local("Poppins-BoldItalic"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiDyp8kv8JHgFVrJJLmy15VF9eL.ttf) 
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:normal;
  font-weight:400;
  font-display:swap;
  src:local("Poppins Regular"), 
  local("Poppins-Regular"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiEyp8kv8JHgFVrJJfedw.ttf)
  format("truetype")
}
@font-face { 
  font-family:Poppins;
  font-style:normal;
  font-weight:600;
  font-display:swap;
  src:local("Poppins SemiBold"),
  local("Poppins-SemiBold"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiByp8kv8JHgFVrLEj6Z1xlEA.ttf)
  format("truetype")
}
@font-face {
  font-family:Poppins;
  font-style:normal;
  font-weight:700;
  font-display:swap;
  src:local("Poppins Bold"),
  local("Poppins-Bold"),
  url(https://fonts.gstatic.com/s/poppins/v12/pxiByp8kv8JHgFVrLCz7Z1xlEA.ttf)
  format("truetype")
}
//font end


//global
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0;
}
  
*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

body {
  font-size: 1rem;
  line-height: 1.5;
  margin: 0;

  font-family: Poppins, sans-serif;
  font-size: 1rem;
  letter-spacing: .4px;
  background-color: darken(#fff, 2%);
}

.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

//resets
h2 {
  text-transform: uppercase;
  font-weight: 500;
}
a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}
button {
    cursor: pointer;
}

//===================
//mixins
//===================

//IE mediaquery
@mixin ie-only() {
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        /* IE10+ CSS */
        @content;
    }
}

//screensize mediaquery
@mixin mq($break) {
  $value: map-get($breakpoints, $break);
  $sm: map-get($breakpoints, 'sm');
    
  @if $value == null {
    @error "'#{$break}' is not a valid breakpoint name.";   
  }
            
  @if $value < $sm {
    @media only screen and (max-width: $value) {
       @content;
    }
   }
  @else {
     @media only screen and (min-width: $value) {
       @content;
    }
  }
} 

//Naming serivce cards and positioning for IE
@mixin ie-service-card-positioning() {
    .software {
        -ms-grid-column: 1;
        -ms-grid-row: 1;
        margin-bottom: 1em;
        
        @include mq(med) { //2x5
            -ms-grid-column: 1;
            -ms-grid-row: 1;
            -ms-grid-column-span: 2;

            @include mq(lg) { //6x3
                -ms-grid-column: 1;
                -ms-grid-row: 1;
                -ms-grid-column-span: 2;
                margin-right: 1em;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 1;
                    -ms-grid-row: 1;
                    -ms-grid-column-span: 4;
                }
            }
        }
    }
    .it {
        -ms-grid-column: 1;
        -ms-grid-row: 2;
        margin: 1em 0;

        @include mq(med) {
            -ms-grid-column: 1;
            -ms-grid-row: 2;
            -ms-grid-column-span: 2;
            margin: 1em 0;

            @include mq(lg) { //6x3
                -ms-grid-column: 3;
                -ms-grid-row: 1;
                -ms-grid-column-span: 2;
                margin: 0 1em 1em;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 5;
                    -ms-grid-row: 1;
                    -ms-grid-column-span: 4;
                }
            }
        }
    }
    .digital {
        -ms-grid-column: 1;
        -ms-grid-row: 3;
        margin: 1em 0;

        @include mq(med) {
            -ms-grid-column: 1;
            -ms-grid-row: 3;
            -ms-grid-column-span: 2;

            @include mq(lg) { //6x3
                -ms-grid-column: 5;
                -ms-grid-row: 1;
                -ms-grid-column-span: 2;
                margin: 0 0 1em 1em;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 9;
                    -ms-grid-row: 1;
                    -ms-grid-column-span: 4;
                }
            }
        }
    }
    .telecoms {
        -ms-grid-column: 1;
        -ms-grid-row: 4;
        margin: 1em 0;

        @include mq(med) {
            -ms-grid-column: 1;
            -ms-grid-row: 4;
            margin-right: 1em;

            @include mq(lg) { //6x3
                -ms-grid-column: 1;
                -ms-grid-row: 2;
                -ms-grid-column-span: 3;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 1;
                    -ms-grid-row: 2;
                    -ms-grid-column-span: 3;
                    margin-bottom: 0;
                }
            }
        }
    }
    .web {
        -ms-grid-column: 1;
        -ms-grid-row: 5;
        margin: 1em 0;

        @include mq(med) {
            -ms-grid-column: 2;
            -ms-grid-row: 4;
            margin-left: 1em;

            @include mq(lg) { //6x3
                -ms-grid-column: 4;
                -ms-grid-row: 2;
                -ms-grid-column-span: 3;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 4;
                    -ms-grid-row: 2;
                    -ms-grid-column-span: 3;
                    margin-bottom: 0;
                    margin-right: 1em;
                }
            }
        }
    }
    .security {
        -ms-grid-column: 1;
        -ms-grid-row: 6;
        margin: 1em 0;

        @include mq(med) {
            -ms-grid-column: 1;
            -ms-grid-row: 5;
            margin: 1em 1em 0 0;

            @include mq(lg) { //6x3
                -ms-grid-column: 1;
                -ms-grid-row: 3;
                -ms-grid-column-span: 3;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 7;
                    -ms-grid-row: 2;
                    -ms-grid-column-span: 3;
                    margin-left: 1em;
                }
            }
        }
    }
    .web-training {
        -ms-grid-column: 1;
        -ms-grid-row: 7;
        margin-top: 1em;

        @include mq(med) {
            -ms-grid-column: 2;
            -ms-grid-row: 5;
            margin-left: 1em;

            @include mq(lg) { //6x3
                -ms-grid-column: 4;
                -ms-grid-row: 3;
                -ms-grid-column-span: 3;

                @include mq(xlg) { //12x2
                    -ms-grid-column: 10;
                    -ms-grid-row: 2;
                    -ms-grid-column-span: 3;
                }
            }
        }
    }
}

@mixin ie-service-card-layout() {
    //sm screen 1x7
    -ms-grid-columns: 1fr;
    -ms-grid-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;

    //med 2x5
    @include mq(med) {
        -ms-grid-columns: 1fr 1fr;
        -ms-grid-rows: 1fr 1fr 1fr 1fr 1fr;

        //lg 6x3
        @include mq(lg) {
            -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
            -ms-grid-rows: 1fr 1fr 1fr;

            //xlg 12x2
            @include mq(xlg) {
                -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
                -ms-grid-rows: 1fr 1fr;
            }
        }
    }
    @include ie-service-card-positioning();
    
}

@mixin ie-news-card-layout() {
    //sm screen 1x3
    -ms-grid-columns: 1fr;
    -ms-grid-rows: 1fr 1fr 1fr;

    //med 2x1
    @include mq(med) {
        -ms-grid-columns: 1fr 1fr;
        -ms-grid-rows: 1fr;

        //xlg 3x1
        @include mq(xlg) {
            -ms-grid-columns: 1fr 1fr 1fr;
            -ms-grid-rows: 1fr;
        }
    }

    .news1 {
        -ms-grid-column: 1;
        -ms-grid-row: 1;
        margin-bottom: 1em;

        @include mq(med) {
            margin: 0 1em 0 0;
        }
    }
    .news2 {
        -ms-grid-column: 1;
        -ms-grid-row: 2;
        margin: 1em 0;

        @include mq(med) {
            -ms-grid-column: 2;
            -ms-grid-row: 1;
            margin: 0 0 0 1em;

            @include mq(xlg) {
                margin-right: 1em;
            }
        }
    }
    .news3 {
        -ms-grid-column: 1;
        -ms-grid-row: 3;
        margin-top: 1em;

        @include mq(xlg) {
            -ms-grid-column: 3;
            -ms-grid-row: 1;
            margin: 0 0 0 1em;
        }
    }
}

//global properties for card grid and items
//used by service-cards and news articles
@mixin card-grid () {
    display: grid;
    display: -ms-grid;

    width: 100%;
    grid-gap: 2em;
    margin: 5em 0;
    
    //grid-template-columns: 1fr; //sm screen layout

    .card {
        //display: inline-block;
        padding: 30px;
        border: 1px solid rgb(204, 204, 204);
        border-radius: 0.25em;
        text-align: center; 
        color: $dark;
        background-color: $white;
    }
}

.wrap {
    margin: 0 1em;

    @include mq(med){
        margin: 0 auto;
        max-width: 750px;

        @include mq(lg) {
            max-width: 970px;

             @include mq(xlg) {
                max-width: 1200px;
            }
        }
    }
}

//loop used for styling the service cards
@for $i from 1 through 7 {
    .service-list {
        .card:nth-of-type(#{$i}) {

           @include mq(med){
               grid-area: s#{$i};
           } 

            //CARD default state
            .service-icon {
                color: $white;
                background-color: map-get($service-colors, #{$i});
            }
            .btn {
                background-color: map-get($service-colors, #{$i});
            }

            //CARD hover state
            &:hover {
                cursor: pointer;

                & {
                    background-color: map-get($service-colors, #{$i});
                }
                    
                .btn {
                    color: map-get($service-colors, #{$i});
                    background-color: $white;
                }
                h3,
                p {
                    color: white;
                }
                .service-icon {
                    color: map-get($service-colors, #{$i});
                    background-color: $white;
                }
                h3:after {
                    background-color: $white;
                }
            }
        }
    }     
}

@mixin nav-style() {
    .web {
        i {
            color: get-color(web);
        }
        small {
            &::after {
                display: block;
                content: "Design";
            }
        }
        &:hover,
        .dd-menu,
        .dd-menu:before,
        .dd-menu:after {
            background-color: get-color(web);
        }
    }

    .it {
        i {
            color: get-color(it);
        }
        small {
            &::after {
                display: block;
                content: "Support";
            }
        }
        &:hover,
        .dd-menu,
        .dd-menu:before,
        .dd-menu:after {
            background-color: get-color(it);
        }
    }

    .telecoms {
        i {
            color: get-color(telecoms);
        }
        small {
            &::after {
                display: block;
                content: "Services";
            }
        }
        &:hover,
        .dd-menu,
        .dd-menu:before,
        .dd-menu:after {
            background-color: get-color(telecoms);
        }
    }

    .software {
        i {
            color: get-color(software);
        }
        small {
            &::after {
                display: block;
                content: "Software";
            }
        }
        &:hover,
        .dd-menu,
        .dd-menu:before,
        .dd-menu:after {
            background-color: get-color(software);
        }
    }

    .digital {
        i {
            color: get-color(digital);
        }
        small {
            &::after {
                display: block;
                content: "Marketing";
            }
        }
        &:hover,
        .dd-menu,
        .dd-menu:before,
        .dd-menu:after {
            background-color: get-color(digital);
        }
    }

    .security {
        i {
            color: get-color(security);
        }
        small {
            &::after {
                display: block;
                content: "Security";
            }
        }
        &:hover,
        .dd-menu,
        .dd-menu:before,
        .dd-menu:after {
            background-color: get-color(security);
        }
    }
}

@mixin carouselStyle() {
    .webbtn {
        background-color: get-color(web);
    }
    .itbtn {
        background-color: get-color(it);
    }
    .telecomsbtn {
        background-color: get-color(telecoms);
    }
    .softwarebtn {
        background-color: get-color(software);
    }
    .digitalbtn {
        background-color: get-color(digital);
    }
    .cyberbtn {
        background-color: get-color(security);
    }
}

//===============
//FUNCTIONS
//===============

//retrieve color from code
@function get-color($name) {
  $i:  map-get($color-key, $name);
  
  @return map-get($service-colors, #{$i});
}